{"version":3,"sources":["heading/Heading.js","experience/Project.js","experience/Experience.js","fun/Microproject.js","fun/Fun.js","contact/Contact.js","sketches/sketch.js","App.js","serviceWorker.js","index.js"],"names":["Heading","className","Project","props","href","link","target","rel","src","picture","alt","placeholder","overview","detail","tech","projects","Experience","projectList","map","project","index","key","Microproject","info","Fun","links","Link","Contact","linkList","sketch","p","positions","setup","createCanvas","window","innerWidth","innerHeight","noStroke","draw","frameCount","clear","forEach","pos","circle","Math","random","windowResized","resizeCanvas","myCustomRedrawAccordingToNewPropsHandler","newProps","App","console","log","width","height","state","setPositions","i","push","floor","this","setState","updateDimensions","addEventListener","bind","removeEventListener","title","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6a0f1cb.chunk.js","sourcesContent":["import React from 'react';\nimport './Heading.css';\n\nfunction Heading() {\n  return (\n    <header className=\"Heading\">\n        <h1>Hi! I'm <span>Rachael Robinson</span>,</h1>\n        <p>a Web developer and education enthusiast, based in London.</p>\n        {/* <div className=\"contact\">\n          add links here\n        </div> */}\n      </header>\n  )\n}\n\nexport default Heading;","import React from 'react'\n\nfunction Project(props) {\n  return (\n    <a className=\"Project\" href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n      <div className=\"Project-overview\">\n        <img className=\"Project-overview-img\" src={ props.picture } alt={ props.placeholder } ></img>\n        <p className=\"Project-overview-text\">{ props.overview }</p>\n      </div>\n      <div className=\"Project-detail\">\n        <div className=\"Project-detail-text\">{props.detail} with <div className=\"Project-detail-emphasis\"><p>{ props.tech[0] }</p></div> and <div className=\"Project-detail-emphasis\"><p>{ props.tech[1] }</p></div></div>\n      </div>\n    </a>\n  );\n}\n\nexport default Project;","import React from 'react';\nimport Project from './Project.js';\nimport './Experience.css';\n\nconst projects = [\n  {\n    \"picture\": \"./projects/robot.png\",\n    \"placeholder\": \"BB8 image\",\n    \"overview\": \"Star Wars coding kit at Kano Computing\",\n    \"detail\": \"animating a robot\",\n    \"tech\": [\"pixi.js\", \"matter.js\"],\n    \"link\": \"https://kano.me/uk/store/products/star-wars-the-force-coding-kit\"\n  }, {\n    \"picture\": \"./projects/snowstorm.png\",\n    \"placeholder\": \"snowstorm blockly image\",\n    \"overview\": \"Frozen coding kit at Kano Computing\",\n    \"detail\": \"generating a customisable storm\",\n    \"tech\": [\"Blockly\", \"simplex noise\"],\n    \"link\": \"https://kano.me/uk/store/products/disney-frozen-2-coding-kit\"\n  }, {\n    \"picture\": \"./projects/toucanbox.png\",\n    \"placeholder\": \"ToucanBox logo\",\n    \"overview\": \"ToucanBox subscription website\",\n    \"detail\": \"improving user profile experience\",\n    \"tech\": [\"Vue.js\", \"Ruby\"],\n    \"link\": \"https://www.toucanbox.com/\"\n  }, {\n    \"picture\": \"./projects/seatwave.jpg\",\n    \"placeholder\": \"Seatwave logo\",\n    \"overview\": \"Ticket resale website\",\n    \"detail\": \"building checkout components\",\n    \"tech\": [\"React\", \"Redux\"],\n    \"link\": \"https://www.ticketmaster.co.uk/\"\n  }\n];\n\nfunction Experience() {\n\n  const projectList = projects.map((project, index) =>\n    <Project \n      picture = {project.picture}\n      placeholder = {project.placeholder}\n      overview = {project.overview}\n      detail = {project.detail}\n      tech = {project.tech}\n      link = {project.link}\n      key = {index}\n    />\n  );\n\n  return (\n    <section className=\"Experience\">\n      <h2>Ask me about my experience</h2>\n      <div className=\"Experience-contents\">\n        {projectList}\n      </div>\n    </section>\n  );\n}\n\nexport default Experience;\n\n","import React from 'react';\n\nfunction Microproject(props) {\n  return (\n    <a className=\"Fun-example\" href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n      <img src={ props.picture } alt={ props.placeholder } className=\"Fun-img\"></img>\n      <div className=\"Fun-text\"><p>{ props.info }</p></div>\n    </a>\n  );\n}\n\nexport default Microproject;","import React from 'react';\nimport Microproject from './Microproject.js';\nimport './Fun.css';\n\nconst projects = [\n  {\n    picture: \"./projects/game.png\",\n    placeholder: \"game screenshot\",\n    info: \"Tiny Rocket Game\",\n    link: \"https://codepen.io/rachaelcodes/pen/pozdZdq\",\n  }, {\n    picture: \"./projects/planet.png\",\n    placeholder: \"generated planet\",\n    info: \"Planet Generator\",\n    link: \"https://codepen.io/rachaelcodes/pen/WqgZzW\",\n  }, {\n    picture: \"./projects/connect4.png\",\n    placeholder: \"connect 4 game\",\n    info: \"React Connect 4\",\n    link: \"https://github.com/rachaelcodes/connect4\",\n  }, {\n    picture: \"./projects/graph.png\",\n    placeholder: \"graph section\",\n    info: \"Semiotic.js Lunch and Learn\",\n    link: \"https://codesandbox.io/s/8y3rnl3830\",\n  }, {\n    picture: \"./projects/svgproject.png\",\n    placeholder: \"svg filter examples\",\n    info: \"SVG filter experiments\",\n    link: \"https://codepen.io/rachaelcodes/pen/eXBVrM\",\n  },\n]\n\nfunction Fun() {\n  const projectList = projects.map((project, index) =>\n    <Microproject \n      picture = {project.picture}\n      placeholder = {project.placeholder}\n      info = {project.info}\n      link = {project.link}\n      key = {index}\n    />\n  );\n\n  return (\n    <section className=\"Fun\">\n      <h2>Ask me about my micro-projects</h2>\n      <div className=\"Fun-list\">\n        { projectList }\n      </div>\n    </section>\n  )\n}\n\n\nexport default Fun;","import React from 'react';\nimport './Contact.css';\n\nconst links = [\n  {\n    link: \"mailto:rcdb.orourke@gmail.com?subject=Portfolio enquiry\",\n    src: \"./icons/email.svg\",\n    alt: \"Get in touch by email\"\n  }, {\n    link: \"https://www.linkedin.com/in/rachaelcodes/\",\n    src: \"./icons/linkedin.svg\",\n    alt: \"Get in touch through LinkedIn\"\n  },  {\n    link: \"https://github.com/rachaelcodes\",\n    src: \"./icons/github.svg\",\n    alt: \"Check out my GitHub\"\n  },\n];\n\nfunction Link(props) {\n  return (\n    <a href={props.link} className=\"Contact-link\" target=\"_blank\" rel=\"noopener noreferrer\"><img src={props.src} alt={props.alt}></img></a>\n  )\n}\n\nfunction Contact() {\n  const linkList = links.map(\n    (link, index) => \n    <Link \n      link = {link.link}\n      src = {link.src}\n      alt = {link.alt}\n      key = {index}\n    />\n  );\n\n  return (\n    <section className=\"Contact\">\n      <h2>Ask me what I can make for your company</h2>\n      {linkList}\n    </section>\n  );\n}\n\nexport default Contact;","export default function sketch(p){\n  let canvas;\n  let positions = [];\n\n  function randomTwinkle () {\n    return Math.random() < 0.95 ? 2 : 1;\n  }\n\n  p.setup = () => {\n    canvas = p.createCanvas(window.innerWidth, window.innerHeight);\n    p.noStroke();\n  }\n\n  p.draw = () => {\n    if (p.frameCount % 15 === 0) {\n      p.clear();\n      positions.forEach(pos => {\n        p.circle(pos[0], pos[1], randomTwinkle())\n      });\n    }\n  }\n\n  p.windowResized = () => {\n    p.resizeCanvas(window.innerWidth, window.innerHeight);\n  }\n\n  p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n    if (!canvas) {\n      // canvas = p.createCanvas(newProps.dimensions.width, newProps.dimensions.height);\n    }\n    // if(canvas) //Make sure the canvas has been created\n    //   {\n        // console.log(newProps)\n        positions = newProps.positions;\n      // } // p.fill(newProps.color);\n\n  }\n}","import React, {Component} from 'react';\nimport Heading from './heading/Heading.js';\nimport Experience from './experience/Experience.js';\nimport Fun from './fun/Fun.js';\nimport Contact from './contact/Contact.js';\n\nimport P5Wrapper from 'react-p5-wrapper';\nimport sketch from './sketches/sketch';\nimport './App.css';\n\nclass App extends Component  {\n  constructor(){\n    console.log('%cHello there! 👋 Check out more of my code at github.com/rachaelcodes', 'background: mediumspringgreen;')\n    super();\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    \n    this.state = {\n      positions: this.setPositions(this.width, this.height)\n    };\n  }\n\n  setPositions(width, height) {\n    let positions = [];\n\n    for (var i = 0; i < 125; i ++) {\n      let pos = [];\n      pos.push(Math.floor(Math.random() * width));\n      pos.push(Math.floor(Math.random() * height));\n\n      positions.push(pos);\n    }\n\n    return positions;\n  }\n\n  \n  updateDimensions() {\n    this.setState(\n      {\n        positions: this.setPositions(window.innerWidth, window.innerHeight)\n      }\n    )\n  };\n\n  \n  componentDidMount(){\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-contents\">\n          <Heading />\n          <Experience />\n          <Fun />\n          <Contact />\n          <div className=\"App-credits\">Icons made by <a href=\"https://www.flaticon.com/authors/pixel-perfect\" title=\"Pixel perfect\">Pixel perfect</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n        </div>\n        \n        <div className=\"P5\">\n          <P5Wrapper sketch={sketch} positions={this.state.positions}></P5Wrapper>\n        </div>\n        <link href=\"https://fonts.googleapis.com/css?family=Josefin+Sans:400,700&display=swap\" rel=\"stylesheet\"></link>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}